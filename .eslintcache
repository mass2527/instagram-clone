[{"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\index.js":"1","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\App.js":"2","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\serviceWorker.js":"3","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\app\\store.js":"4","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Header.js":"5","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Feed.js":"6","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Post.js":"7","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Comment.js":"8","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\firebase\\firebase.js":"9","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\Route\\Login.js":"10","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\features\\userSlice.js":"11","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\DropdownMenu.js":"12","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Overlay.js":"13","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\CommentSender.js":"14","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\PostImageLoader.js":"15","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\TransitionsModal.js":"16","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Profile.js":"17","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\SquarePost.js":"18","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\RefreshLoader.js":"19","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\ProfilePosts.js":"20"},{"size":740,"mtime":1609250344504,"results":"21","hashOfConfig":"22"},{"size":2256,"mtime":1609510434204,"results":"23","hashOfConfig":"22"},{"size":5141,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":186,"mtime":1609253602837,"results":"25","hashOfConfig":"22"},{"size":3148,"mtime":1609472396105,"results":"26","hashOfConfig":"22"},{"size":2468,"mtime":1609509491199,"results":"27","hashOfConfig":"22"},{"size":5986,"mtime":1609510183667,"results":"28","hashOfConfig":"22"},{"size":2662,"mtime":1609475152742,"results":"29","hashOfConfig":"22"},{"size":674,"mtime":1609324817607,"results":"30","hashOfConfig":"22"},{"size":5355,"mtime":1609313370799,"results":"31","hashOfConfig":"22"},{"size":470,"mtime":1609313453960,"results":"32","hashOfConfig":"22"},{"size":8211,"mtime":1609478147815,"results":"33","hashOfConfig":"22"},{"size":11373,"mtime":1609472322230,"results":"34","hashOfConfig":"22"},{"size":1909,"mtime":1609476546498,"results":"35","hashOfConfig":"22"},{"size":925,"mtime":1609510279878,"results":"36","hashOfConfig":"22"},{"size":1603,"mtime":1609475615651,"results":"37","hashOfConfig":"22"},{"size":6812,"mtime":1609513252152,"results":"38","hashOfConfig":"22"},{"size":3672,"mtime":1609508815728,"results":"39","hashOfConfig":"22"},{"size":504,"mtime":1609491084135,"results":"40","hashOfConfig":"22"},{"size":562,"mtime":1609511632198,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1dya9m5",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\index.js",[],["87","88"],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\App.js",["89"],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\serviceWorker.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\app\\store.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Header.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Feed.js",["90","91"],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Post.js",["92","93","94","95"],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Comment.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\firebase\\firebase.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\Route\\Login.js",["96"],"import React, { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport db, { auth } from '../firebase/firebase';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Spin = keyframes`\r\n    from{\r\n        transform:rotate(0deg)\r\n    }\r\n    to{\r\n        transform:rotate(360deg)\r\n    }\r\n    `;\r\n\r\nconst S = {\r\n  Login: styled.div`\r\n    display: grid;\r\n    place-items: center;\r\n    width: 100%;\r\n    flex: 1;\r\n  `,\r\n\r\n  LoginBox: styled.div`\r\n    margin-top: 100px;\r\n    width: 350px;\r\n    height: 380px;\r\n    border: 1px solid lightgrey;\r\n    background: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  `,\r\n\r\n  LoginForm: styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 20px;\r\n  `,\r\n\r\n  Logo: styled.img`\r\n    margin-top: 30px;\r\n  `,\r\n\r\n  LoginInput: styled.input`\r\n    margin-top: 15px;\r\n    width: 250px;\r\n    height: 36px;\r\n    padding: 8px;\r\n    box-sizing: border-box;\r\n    border: 1px solid lightgrey;\r\n    background-color: #fafafa;\r\n    :focus {\r\n      outline: none;\r\n    }\r\n  `,\r\n\r\n  LoginButton: styled.button`\r\n    background-color: ${(props) => (props.disabled ? '#b2dffc' : '#0095f6')};\r\n    cursor: ${(props) => (props.disabled ? '' : 'pointer')};\r\n    border: none;\r\n    border-radius: 3px;\r\n    margin-top: 10px;\r\n    padding: 5px;\r\n    color: #ffffff;\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n  `,\r\n\r\n  Loader: styled.img`\r\n    width: 12px;\r\n    height: 12px;\r\n    animation: ${Spin} 1s infinite linear;\r\n  `,\r\n\r\n  ErrorMessage: styled.strong`\r\n    width: 80%;\r\n    text-align: center;\r\n  `,\r\n};\r\n\r\nfunction Login() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [clicked, setClicked] = useState('');\r\n  const history = useHistory();\r\n\r\n  function initializeInput() {\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n    setLoading(false);\r\n    setClicked('');\r\n  }\r\n\r\n  async function signUp(e) {\r\n    e.preventDefault();\r\n    setClicked('signUp');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const generatedUser = await auth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n\r\n      await auth.currentUser.updateProfile({\r\n        displayName: name,\r\n      });\r\n\r\n      db.collection('users')\r\n        .add({\r\n          displayName: name,\r\n          id: generatedUser.user.uid,\r\n        })\r\n        .then(() => {\r\n          history.push('/');\r\n        });\r\n    } catch (error) {\r\n      setError(error.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function login(e) {\r\n    e.preventDefault();\r\n    setClicked('login');\r\n    setLoading(true);\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((user) => {\r\n        history.push('/');\r\n        initializeInput();\r\n      })\r\n      .catch((error) => {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <S.Login>\r\n      <S.LoginBox>\r\n        <S.Logo\r\n          src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.pngs\"\r\n          alt=\"\"\r\n        />\r\n\r\n        <S.LoginForm>\r\n          <S.LoginInput\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n              if (name.includes(' ')) {\r\n                setError('name can not include space');\r\n              } else {\r\n                setError('');\r\n              }\r\n            }}\r\n            maxLength={12}\r\n            value={name}\r\n            type=\"text\"\r\n            placeholder=\"name\"\r\n          />\r\n          <S.LoginInput\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            maxLength={20}\r\n            value={email}\r\n            type=\"email\"\r\n            placeholder=\"email\"\r\n          />\r\n          <S.LoginInput\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n            minLength={6}\r\n            maxLength={15}\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n          />\r\n          <S.LoginButton\r\n            disabled={password.length < 6 || !email || name.length !== 0}\r\n            onClick={login}\r\n          >\r\n            {loading && clicked === 'login' ? (\r\n              <S.Loader\r\n                src=\"https://img2.pngio.com/loader-png-transparent-loaderpng-images-pluspng-loader-png-504_504.png\"\r\n                alt=\"\"\r\n              />\r\n            ) : (\r\n              <>Login</>\r\n            )}\r\n          </S.LoginButton>\r\n          <S.LoginButton\r\n            disabled={\r\n              password.length < 6 ||\r\n              name.length < 5 ||\r\n              !email ||\r\n              name.includes(' ')\r\n            }\r\n            onClick={signUp}\r\n          >\r\n            {loading && clicked === 'signUp' ? (\r\n              <S.Loader\r\n                src=\"https://img2.pngio.com/loader-png-transparent-loaderpng-images-pluspng-loader-png-504_504.png\"\r\n                alt=\"\"\r\n              />\r\n            ) : (\r\n              <>Sign Up</>\r\n            )}\r\n          </S.LoginButton>\r\n        </S.LoginForm>\r\n        {error && <S.ErrorMessage>{error}</S.ErrorMessage>}\r\n      </S.LoginBox>\r\n    </S.Login>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\features\\userSlice.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\DropdownMenu.js",["97"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport db, { auth, storage } from '../firebase/firebase';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport firebase from 'firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst S = {\r\n  DropdownMenu: styled.div`\r\n    width: 100px;\r\n    box-sizing: border-box;\r\n    top: 55px;\r\n    position: absolute;\r\n    right: 0px;\r\n    background: white;\r\n    border: 1px solid lightgray;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    border-radius: 3px;\r\n    box-shadow: 1px 2px 5px lightgray;\r\n    opacity: ${(props) => (props.isOpen ? 1 : 0)};\r\n    transition: opacity 0.3s ease-in-out;\r\n    pointer-events: ${(props) => !props.isOpen && 'none'};\r\n  `,\r\n\r\n  MenuItem: styled.strong`\r\n    height: 40px;\r\n    padding: 5px 0px;\r\n    flex: 1;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    color: #7f7f7f;\r\n    /* opacity:{props} */\r\n\r\n    > .MuiSvgIcon-root {\r\n      margin: 0px 5px;\r\n    }\r\n\r\n    :hover {\r\n      background-color: rgb(250, 250, 250);\r\n      color: black;\r\n    }\r\n  `,\r\n\r\n  UploadContainer: styled.div`\r\n    height: 100%;\r\n    display: grid;\r\n    place-items: center;\r\n    background-color: rgb(250, 250, 250);\r\n  `,\r\n\r\n  UploadForm: styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 350px;\r\n    height: 380px;\r\n\r\n    justify-content: space-between;\r\n  `,\r\n\r\n  UploadInput: styled.input`\r\n    height: 40px;\r\n    border: 1px solid lightgray;\r\n    padding-left: 16px;\r\n    display: ${(props) => props.hide && 'none'};\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n  `,\r\n\r\n  UploadTextarea: styled.textarea`\r\n    flex: 1;\r\n    border: 1px solid lightgray;\r\n    padding: 16px;\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n  `,\r\n\r\n  UploadLabel: styled.label`\r\n    height: 40px;\r\n    border: 1px solid lightgray;\r\n    padding-left: 16px;\r\n    background-color: white;\r\n    display: grid;\r\n    place-items: center;\r\n  `,\r\n\r\n  Loader: styled.img`\r\n    height: 30px;\r\n  `,\r\n};\r\n\r\nfunction DropdownMenu({ isOpen }) {\r\n  const history = useHistory();\r\n  const menuRef = useRef(null);\r\n  const user = useSelector(selectUser);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [caption, setCaption] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function initializeInput() {\r\n    setTitle('');\r\n    setCaption('');\r\n    setFile(null);\r\n    setError('');\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    initializeInput();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function clickProfile() {\r\n    history.push(`/${user.displayName}/`, {\r\n      userName: user.displayName,\r\n    });\r\n  }\r\n\r\n  function clickSignOut() {\r\n    auth.signOut();\r\n    history.replace('/login');\r\n  }\r\n\r\n  function fileChange(e) {\r\n    if (!e.target.files[0]) return;\r\n    setFile(e.target.files[0]);\r\n\r\n    if (\r\n      e.target.files[0].type !== 'image/jpeg' &&\r\n      e.target.files[0].type !== 'image/jpg' &&\r\n      e.target.files[0].type !== 'image/gif' &&\r\n      e.target.files[0].type !== 'image/png'\r\n    ) {\r\n      setFile(null);\r\n      return setError('jpeg(jpg), png and gif extensions only 😥');\r\n    } else {\r\n      setError('');\r\n    }\r\n  }\r\n\r\n  function handleUpload(e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    const uploadTask = storage.ref(`/images/${file.name}`).put(file);\r\n\r\n    uploadTask.on(\r\n      'state_changed',\r\n      (snapshot) => {},\r\n      (error) => {\r\n        setError(error.message);\r\n      },\r\n      () => {\r\n        storage\r\n          .ref('images')\r\n          .child(file.name)\r\n          .getDownloadURL()\r\n          .then((url) => {\r\n            db.collection('posts').add({\r\n              userImageURL: user.userImageURL,\r\n              displayName: user.displayName,\r\n              title,\r\n              imageURL: url,\r\n              caption,\r\n              userId: user.userId,\r\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            });\r\n            initializeInput();\r\n            handleClose();\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <S.DropdownMenu ref={menuRef} isOpen={isOpen}>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Upload Post\r\n            </Typography>\r\n            <Button\r\n              onClick={handleUpload}\r\n              disabled={!title.length || !caption.length || !file}\r\n              autoFocus\r\n              color=\"inherit\"\r\n            >\r\n              Upload\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <S.UploadContainer>\r\n          <S.UploadForm>\r\n            <S.UploadInput\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              value={title}\r\n              maxLength={30}\r\n              placeholder=\"Title\"\r\n              type=\"text\"\r\n            />\r\n            <S.UploadTextarea\r\n              onChange={(e) => setCaption(e.target.value)}\r\n              value={caption}\r\n              maxLength={700}\r\n              placeholder=\"Caption\"\r\n              type=\"text\"\r\n            ></S.UploadTextarea>\r\n\r\n            <S.UploadLabel htmlFor=\"file\">\r\n              {loading ? (\r\n                <S.Loader\r\n                  src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.wpfaster.org%2Fwp-content%2Fuploads%2F2013%2F06%2Floading-gif.gif&f=1&nofb=1\"\r\n                  alt=\"\"\r\n                />\r\n              ) : (\r\n                <>Image Select</>\r\n              )}\r\n            </S.UploadLabel>\r\n            <S.UploadInput id=\"file\" hide onChange={fileChange} type=\"file\" />\r\n          </S.UploadForm>\r\n          <div>{file?.name && <strong>{file?.name}</strong>}</div>\r\n          <div>{error && <strong>{error}</strong>}</div>\r\n        </S.UploadContainer>\r\n      </Dialog>\r\n\r\n      {user ? (\r\n        <>\r\n          <S.MenuItem onClick={clickProfile}>\r\n            <FaceIcon />\r\n            Profile\r\n          </S.MenuItem>\r\n          <S.MenuItem onClick={handleClickOpen}>\r\n            <PublishIcon />\r\n            Upload\r\n          </S.MenuItem>\r\n          <S.MenuItem onClick={clickSignOut}>\r\n            <ExitToAppIcon />\r\n            Log out\r\n          </S.MenuItem>\r\n        </>\r\n      ) : (\r\n        <S.MenuItem onClick={() => history.push('/login')}>\r\n          <LockOpenIcon />\r\n          Log in\r\n        </S.MenuItem>\r\n      )}\r\n    </S.DropdownMenu>\r\n  );\r\n}\r\n\r\nexport default DropdownMenu;\r\n","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Overlay.js",["98","99","100","101"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport db from '../firebase/firebase';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport moment from 'moment';\r\nimport CommentSender from './CommentSender';\r\nimport Comment from './Comment';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PostImageLoader from './PostImageLoader';\r\n\r\nconst S = {\r\n  Overlay: styled.div`\r\n    position: absolute;\r\n    top: ${(props) => props.height}px;\r\n    overflow-y: hidden;\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: grid;\r\n    place-items: center;\r\n  `,\r\n\r\n  ClostButton: styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0px;\r\n    padding: 16px;\r\n    z-index: 1;\r\n\r\n    > .MuiSvgIcon-root {\r\n      cursor: pointer;\r\n      color: white;\r\n    }\r\n  `,\r\n\r\n  PostBox: styled.div`\r\n    max-width: 935px;\r\n    height: 600px;\r\n    display: flex;\r\n  `,\r\n\r\n  PostLeft: styled.div`\r\n    width: 600px;\r\n\r\n    background-color: black;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    @media (max-width: 1000px) {\r\n      display: none;\r\n    }\r\n  `,\r\n\r\n  PostRight: styled.div`\r\n    width: 335px;\r\n    background-color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n  `,\r\n\r\n  PostImage: styled.img`\r\n    height: 100%;\r\n    max-width: 100%;\r\n    object-fit: contain;\r\n    display: block;\r\n  `,\r\n\r\n  PostTop: styled.div`\r\n    height: 72px;\r\n    padding: 16px;\r\n    box-sizing: border-box;\r\n    border-bottom: 1px solid #efefef;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    > .MuiSvgIcon-root {\r\n      width: 32px;\r\n      height: 32px;\r\n      padding: 2px;\r\n      border: 2px solid #d32c83;\r\n      border-radius: 100%;\r\n      cursor: pointer;\r\n    }\r\n  `,\r\n\r\n  UserImage: styled.img`\r\n    width: 32px;\r\n    height: 32px;\r\n    padding: 2px;\r\n    border: 2px solid #d32c83;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n  `,\r\n\r\n  PostInfo: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 15px;\r\n  `,\r\n\r\n  PostDisplayName: styled.span`\r\n    font-size: 14px;\r\n    color: #262626;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  `,\r\n\r\n  PostTitle: styled.span`\r\n    font-size: 12px;\r\n    color: #262626;\r\n  `,\r\n\r\n  PostMiddle: styled.div`\r\n    padding-top: 20px;\r\n    overflow-y: scroll;\r\n    flex: 1;\r\n    ::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n  `,\r\n\r\n  PostIcons: styled.div`\r\n    cursor: pointer;\r\n    height: 45px;\r\n    padding: 16px;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    align-items: center;\r\n    border-top: 1px solid #efefef;\r\n\r\n    span {\r\n      margin-left: 5px;\r\n      font-size: 14px;\r\n      font-weight: 500;\r\n    }\r\n  `,\r\n\r\n  Timestamp: styled.div`\r\n    height: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 12px;\r\n    color: #8e8e8e;\r\n    padding: 16px;\r\n    box-sizing: border-box;\r\n  `,\r\n\r\n  Circle: styled.div`\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 100%;\r\n    background-color: #efefef;\r\n  `,\r\n\r\n  Bar: styled.div`\r\n    width: ${(props) => props.width}px;\r\n    height: ${(props) => props.height}px;\r\n    margin-top: ${(props) => props.marginTop}px;\r\n    margin-bottom: ${(props) => props.marginBottom}px;\r\n    background-color: #efefef;\r\n  `,\r\n\r\n  PostLoadingBottom: styled.div`\r\n    height: 130px;\r\n    border-top: 1px solid #efefef;\r\n    padding-left: 16px;\r\n  `,\r\n\r\n  CommentLoadMoreContainer: styled.div`\r\n    text-align: center;\r\n    padding: 20px 0px;\r\n    display: ${(props) => props.hide && 'none'};\r\n    > .MuiSvgIcon-root {\r\n      border: 1px solid black;\r\n      border-radius: 100%;\r\n      cursor: pointer;\r\n    }\r\n  `,\r\n};\r\n\r\nfunction Overlay() {\r\n  const user = useSelector(selectUser);\r\n  const { postId } = useParams();\r\n  const [postInfo, setPostInfo] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const [hearts, setHearts] = useState([]);\r\n  const overlayRef = useRef(null);\r\n  const buttonRef = useRef(null);\r\n  const imageRef = useRef(null);\r\n  const history = useHistory();\r\n  const [imageLoading, setImageLoading] = useState(true);\r\n  const [commentsPerPage] = useState(4);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [scrollY, setScrollY] = useState(window.scrollY);\r\n\r\n  function loadMoreComments() {\r\n    setCurrentPage((crr) => crr + 1);\r\n  }\r\n\r\n  function goBackToFormerLocation() {\r\n    document.querySelector('body').style.overflowY = 'scroll';\r\n    history.goBack();\r\n  }\r\n\r\n  function pressESC(e) {\r\n    if (e.keyCode !== 27) return;\r\n    goBackToFormerLocation();\r\n  }\r\n\r\n  function clickOverlay(e) {\r\n    if (e.target !== overlayRef.current) return;\r\n    goBackToFormerLocation();\r\n  }\r\n\r\n  function clickCloseButton(e) {\r\n    goBackToFormerLocation();\r\n  }\r\n\r\n  function handleResize() {\r\n    setScrollY(window.scrollY);\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.querySelector('body').style.overflowY = 'hidden';\r\n\r\n    async function fetchData() {\r\n      const res = await db.collection('posts').doc(postId).get();\r\n      setPostInfo(res.data());\r\n    }\r\n    fetchData();\r\n\r\n    db.collection('posts')\r\n      .doc(postId)\r\n      .collection('comments')\r\n      .orderBy('timestamp', 'desc')\r\n      .onSnapshot((snapshot) => {\r\n        setComments(\r\n          snapshot?.docs.map((doc) => ({\r\n            commentId: doc.id,\r\n            ...doc.data(),\r\n          }))\r\n        );\r\n      });\r\n\r\n    db.collection('posts')\r\n      .doc(postId)\r\n      .collection('hearts')\r\n      .onSnapshot((snapshot) => {\r\n        setHearts(snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() })));\r\n      });\r\n\r\n    imageRef.current.addEventListener('load', () => {\r\n      setImageLoading(false);\r\n    });\r\n    window.addEventListener('click', clickOverlay);\r\n    window.addEventListener('keydown', pressESC);\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      imageRef?.current?.addEventListener('load', () => {\r\n        setImageLoading(true);\r\n      });\r\n      window.removeEventListener('click', clickOverlay);\r\n      window.removeEventListener('keydown', pressESC);\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  function clickHeart() {\r\n    const liked = hearts.find((heart) => heart?.userId === user.userId);\r\n\r\n    if (liked) {\r\n      db.collection('posts')\r\n        .doc(postId)\r\n        .collection('hearts')\r\n        .doc(liked.id)\r\n        .delete();\r\n    } else {\r\n      db.collection('posts').doc(postId).collection('hearts').add({\r\n        userImageURL: user.userImageURL,\r\n        displayName: user.displayName,\r\n        userId: user.userId,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <S.Overlay ref={overlayRef} height={window.scrollY}>\r\n        <S.ClostButton>\r\n          <CloseIcon\r\n            ref={buttonRef}\r\n            height={window.scrollY}\r\n            onClick={clickCloseButton}\r\n            fontSize=\"large\"\r\n          />\r\n        </S.ClostButton>\r\n        <S.PostBox>\r\n          <S.PostLeft>\r\n            {imageLoading && <PostImageLoader />}\r\n            <S.PostImage\r\n              ref={imageRef}\r\n              src={postInfo.imageURL}\r\n              alt={postInfo.title}\r\n            />\r\n          </S.PostLeft>\r\n\r\n          <S.PostRight>\r\n            {imageLoading ? (\r\n              <>\r\n                <S.PostTop>\r\n                  <S.Circle></S.Circle>\r\n                  <S.PostInfo>\r\n                    <S.Bar width={140} height={10} marginBottom={4} />\r\n                    <S.Bar width={100} height={10} marginBottom={0} />\r\n                  </S.PostInfo>\r\n                </S.PostTop>\r\n                <S.PostMiddle></S.PostMiddle>\r\n                <S.PostLoadingBottom>\r\n                  <S.Bar width={140} height={15} marginTop={20} />\r\n                  <S.Bar width={230} height={15} marginTop={10} />\r\n                  <S.Bar width={90} height={15} marginTop={10} />\r\n                </S.PostLoadingBottom>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <S.PostTop>\r\n                  {postInfo.userImageURL ? (\r\n                    <S.UserImage src={postInfo.userImageURL} />\r\n                  ) : (\r\n                    <FaceIcon />\r\n                  )}\r\n                  <S.PostInfo>\r\n                    <S.PostDisplayName>\r\n                      {postInfo.displayName}\r\n                    </S.PostDisplayName>\r\n                    <S.PostTitle>{postInfo.title}</S.PostTitle>\r\n                  </S.PostInfo>\r\n                </S.PostTop>\r\n                <S.PostMiddle>\r\n                  <Comment\r\n                    userImageURL={postInfo.userImageURL}\r\n                    name={postInfo.displayName}\r\n                    content={postInfo.caption}\r\n                    userImageOption\r\n                    timestamp={postInfo.timestamp}\r\n                    timestampOption\r\n                  />\r\n\r\n                  {comments\r\n                    .slice(0, commentsPerPage * currentPage)\r\n                    .map(\r\n                      ({\r\n                        commentId,\r\n                        userImageURL,\r\n                        displayName,\r\n                        comment,\r\n                        timestamp,\r\n                      }) => (\r\n                        <Comment\r\n                          key={commentId}\r\n                          userImageURL={userImageURL}\r\n                          name={displayName}\r\n                          content={comment}\r\n                          userImageOption\r\n                          timestamp={timestamp}\r\n                          timestampOption\r\n                        />\r\n                      )\r\n                    )}\r\n                  {}\r\n                  <S.CommentLoadMoreContainer\r\n                    hide={\r\n                      currentPage ===\r\n                        Math.ceil(comments.length / commentsPerPage) ||\r\n                      Math.ceil(comments.length / commentsPerPage) === 0\r\n                    }\r\n                  >\r\n                    <AddIcon onClick={loadMoreComments} fontSize=\"middle\" />\r\n                  </S.CommentLoadMoreContainer>\r\n                </S.PostMiddle>\r\n                <S.PostIcons>\r\n                  {hearts.find((heart) => heart?.userId === user.userId) ? (\r\n                    <FavoriteIcon color=\"secondary\" onClick={clickHeart} />\r\n                  ) : (\r\n                    <FavoriteBorderIcon onClick={clickHeart} />\r\n                  )}\r\n                  <span>liked {hearts.length}</span>\r\n                </S.PostIcons>\r\n                <S.Timestamp>\r\n                  {moment(\r\n                    new Date(postInfo?.timestamp?.toDate()).toUTCString()\r\n                  ).fromNow()}\r\n                </S.Timestamp>\r\n                <CommentSender postId={postId} user={user} />\r\n              </>\r\n            )}\r\n          </S.PostRight>\r\n        </S.PostBox>\r\n      </S.Overlay>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Overlay;\r\n","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\CommentSender.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\PostImageLoader.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\TransitionsModal.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Profile.js",["102","103","104","105","106"],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\SquarePost.js",["107"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\nimport db from '../firebase/firebase';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nconst S = {\r\n  SquarePost: styled.div`\r\n    width: calc(33.3333333333333333333333% - 18.6666666666666666666666666px);\r\n    max-width: 293px;\r\n    margin-bottom: 28px;\r\n    height: ${(props) => props.height}px;\r\n    position: relative;\r\n    cursor: pointer;\r\n\r\n    :not(:nth-child(3n)) {\r\n      margin-right: 28px;\r\n    }\r\n\r\n    @media (max-width: 735px) {\r\n      width: calc(33.3333333333333333333333% - 2px);\r\n      margin-bottom: 3px;\r\n\r\n      :not(:nth-child(3n)) {\r\n        margin-right: 3px;\r\n      }\r\n    }\r\n  `,\r\n\r\n  Post: styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n\r\n    :hover {\r\n    }\r\n  `,\r\n\r\n  Loader: styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #efefef;\r\n  `,\r\n\r\n  Overlay: styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  `,\r\n\r\n  IconContainer: styled.div`\r\n    color: white;\r\n    margin: 0px 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    height: 40px;\r\n\r\n    > .MuiSvgIcon-root {\r\n      margin-right: 5px;\r\n    }\r\n  `,\r\n\r\n  Number: styled.div`\r\n    margin-bottom: 5px;\r\n    font-weight: bold;\r\n  `,\r\n};\r\n\r\nfunction SquarePost({ postId, imageURL, title }) {\r\n  const divRef = useRef(null);\r\n  const imageRef = useRef(null);\r\n  const [imageWidth, setImageWidth] = useState(500);\r\n  const [loading, setLoading] = useState(false);\r\n  const [overlayOption, setOverlayOption] = useState(false);\r\n  const [numberOfComments, setNumberOfComments] = useState(0);\r\n  const [numberOfHearts, setNumberOfHearts] = useState(0);\r\n  const currentPost = db.collection('posts').doc(postId);\r\n  const history = useHistory();\r\n  const { userName } = useParams();\r\n\r\n  function clickPost() {\r\n    history.push(`/p/${postId}/`, {\r\n      userName,\r\n    });\r\n  }\r\n\r\n  function handleResize() {\r\n    setImageWidth(divRef?.current?.clientWidth);\r\n  }\r\n\r\n  function handleLoad() {\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setImageWidth(divRef.current.clientWidth);\r\n\r\n    currentPost.collection('comments').onSnapshot((snapshot) => {\r\n      setNumberOfComments(snapshot.docs?.length);\r\n    });\r\n\r\n    currentPost.collection('hearts').onSnapshot((snapshot) => {\r\n      setNumberOfHearts(snapshot.docs?.length);\r\n    });\r\n\r\n    imageRef.current.addEventListener('load', handleLoad);\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <S.SquarePost\r\n      onClick={clickPost}\r\n      onMouseEnter={() => setOverlayOption(true)}\r\n      onMouseLeave={() => setOverlayOption(false)}\r\n      height={imageWidth}\r\n      ref={divRef}\r\n    >\r\n      <S.Post ref={imageRef} src={imageURL} alt={title} />\r\n      {loading && <S.Loader></S.Loader>}\r\n      {overlayOption && (\r\n        <S.Overlay>\r\n          <S.IconContainer>\r\n            <FavoriteIcon />\r\n            <S.Number>{numberOfHearts}</S.Number>\r\n          </S.IconContainer>\r\n          <S.IconContainer>\r\n            <ChatBubbleIcon />\r\n            <S.Number>{numberOfComments}</S.Number>\r\n          </S.IconContainer>\r\n        </S.Overlay>\r\n      )}\r\n    </S.SquarePost>\r\n  );\r\n}\r\n\r\nexport default SquarePost;\r\n","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\RefreshLoader.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\ProfilePosts.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":48,"column":6,"nodeType":"114","endLine":48,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":21},{"ruleId":"116","severity":1,"message":"120","line":6,"column":10,"nodeType":"118","messageId":"119","endLine":6,"endColumn":20},{"ruleId":"116","severity":1,"message":"121","line":2,"column":18,"nodeType":"118","messageId":"119","endLine":2,"endColumn":27},{"ruleId":"116","severity":1,"message":"122","line":12,"column":8,"nodeType":"118","messageId":"119","endLine":12,"endColumn":15},{"ruleId":"112","severity":1,"message":"123","line":169,"column":28,"nodeType":"118","endLine":169,"endColumn":35},{"ruleId":"112","severity":1,"message":"124","line":170,"column":6,"nodeType":"114","endLine":170,"endColumn":8,"suggestions":"125"},{"ruleId":"116","severity":1,"message":"126","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":26},{"ruleId":"116","severity":1,"message":"126","line":1,"column":27,"nodeType":"118","messageId":"119","endLine":1,"endColumn":36},{"ruleId":"116","severity":1,"message":"121","line":2,"column":18,"nodeType":"118","messageId":"119","endLine":2,"endColumn":27},{"ruleId":"116","severity":1,"message":"127","line":205,"column":10,"nodeType":"118","messageId":"119","endLine":205,"endColumn":17},{"ruleId":"112","severity":1,"message":"123","line":271,"column":17,"nodeType":"118","endLine":271,"endColumn":24},{"ruleId":"112","severity":1,"message":"128","line":278,"column":6,"nodeType":"114","endLine":278,"endColumn":8,"suggestions":"129"},{"ruleId":"116","severity":1,"message":"130","line":1,"column":38,"nodeType":"118","messageId":"119","endLine":1,"endColumn":44},{"ruleId":"116","severity":1,"message":"131","line":3,"column":23,"nodeType":"118","messageId":"119","endLine":3,"endColumn":32},{"ruleId":"116","severity":1,"message":"132","line":149,"column":10,"nodeType":"118","messageId":"119","endLine":149,"endColumn":20},{"ruleId":"116","severity":1,"message":"133","line":149,"column":22,"nodeType":"118","messageId":"119","endLine":149,"endColumn":35},{"ruleId":"112","severity":1,"message":"134","line":173,"column":6,"nodeType":"114","endLine":173,"endColumn":8,"suggestions":"135"},{"ruleId":"112","severity":1,"message":"136","line":118,"column":6,"nodeType":"114","endLine":118,"endColumn":8,"suggestions":"137"},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["140"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'selectUser' is defined but never used.","'keyframes' is defined but never used.","'history' is defined but never used.","The ref value 'imageRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'imageRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.",["141"],"'useEffect' is defined but never used.","'scrollY' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clickOverlay', 'postId', and 'pressESC'. Either include them or remove the dependency array.",["142"],"'useRef' is defined but never used.","'useParams' is defined but never used.","'likedPosts' is assigned a value but never used.","'setLikedPosts' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userName'. Either include it or remove the dependency array.",["143"],"React Hook useEffect has a missing dependency: 'currentPost'. Either include it or remove the dependency array.",["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [dispatch]",{"range":"155","text":"156"},"Update the dependencies array to be: [postId]",{"range":"157","text":"158"},"Update the dependencies array to be: [clickOverlay, postId, pressESC]",{"range":"159","text":"160"},"Update the dependencies array to be: [userName]",{"range":"161","text":"162"},"Update the dependencies array to be: [currentPost]",{"range":"163","text":"164"},[1286,1288],"[dispatch]",[3872,3874],"[postId]",[6608,6610],"[clickOverlay, postId, pressESC]",[3744,3746],"[userName]",[2923,2925],"[currentPost]"]
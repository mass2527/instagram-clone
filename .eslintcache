[{"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\index.js":"1","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\App.js":"2","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\serviceWorker.js":"3","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\app\\store.js":"4","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Header.js":"5","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Feed.js":"6","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Post.js":"7","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Comment.js":"8","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\firebase\\firebase.js":"9","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\features\\userSlice.js":"10","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\DropdownMenu.js":"11","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Overlay.js":"12","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\CommentSender.js":"13","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\PostImageLoader.js":"14","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\SquarePost.js":"15","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\RefreshLoader.js":"16","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\ProfilePosts.js":"17","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\utils\\util.js":"18","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\PostIcons.js":"19","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\PostRightLoader.js":"20","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\ProfileHeader.js":"21","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\SmallProfileInfoContainer.js":"22","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\ProfileMiddle.js":"23","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\FeedRight.js":"24","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\FeedRightRow.js":"25","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\GlobalStyle.js":"26","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\pages\\Home.js":"27","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\pages\\Login.js":"28","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\LoginForm.js":"29","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\ProfileContainer.js":"30","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\pages\\Profile.js":"31","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\SearchResult.js":"32"},{"size":782,"mtime":1609819345580,"results":"33","hashOfConfig":"34"},{"size":1582,"mtime":1610868046073,"results":"35","hashOfConfig":"34"},{"size":5141,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":186,"mtime":1609253602837,"results":"37","hashOfConfig":"34"},{"size":4841,"mtime":1610891698893,"results":"38","hashOfConfig":"34"},{"size":3193,"mtime":1609671834981,"results":"39","hashOfConfig":"34"},{"size":5191,"mtime":1610866415997,"results":"40","hashOfConfig":"34"},{"size":3513,"mtime":1609820613579,"results":"41","hashOfConfig":"34"},{"size":670,"mtime":1610868132713,"results":"42","hashOfConfig":"34"},{"size":470,"mtime":1609313453960,"results":"43","hashOfConfig":"34"},{"size":8303,"mtime":1609671551426,"results":"44","hashOfConfig":"34"},{"size":9093,"mtime":1609820582915,"results":"45","hashOfConfig":"34"},{"size":1912,"mtime":1609676893806,"results":"46","hashOfConfig":"34"},{"size":925,"mtime":1609510279878,"results":"47","hashOfConfig":"34"},{"size":4091,"mtime":1610866364892,"results":"48","hashOfConfig":"34"},{"size":523,"mtime":1609581869999,"results":"49","hashOfConfig":"34"},{"size":583,"mtime":1609665584778,"results":"50","hashOfConfig":"34"},{"size":190,"mtime":1609819842636,"results":"51","hashOfConfig":"34"},{"size":3595,"mtime":1610866379223,"results":"52","hashOfConfig":"34"},{"size":2108,"mtime":1609660850518,"results":"53","hashOfConfig":"34"},{"size":5182,"mtime":1609664022437,"results":"54","hashOfConfig":"34"},{"size":1164,"mtime":1609664844819,"results":"55","hashOfConfig":"34"},{"size":2464,"mtime":1609665401512,"results":"56","hashOfConfig":"34"},{"size":1182,"mtime":1609820765296,"results":"57","hashOfConfig":"34"},{"size":1551,"mtime":1609819899448,"results":"58","hashOfConfig":"34"},{"size":536,"mtime":1609819232640,"results":"59","hashOfConfig":"34"},{"size":462,"mtime":1610867807782,"results":"60","hashOfConfig":"34"},{"size":153,"mtime":1610865635396,"results":"61","hashOfConfig":"34"},{"size":5590,"mtime":1610866032286,"results":"62","hashOfConfig":"34"},{"size":2352,"mtime":1610867179203,"results":"63","hashOfConfig":"34"},{"size":504,"mtime":1610867858975,"results":"64","hashOfConfig":"34"},{"size":1912,"mtime":1610891657498,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1dya9m5",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\index.js",[],["137","138"],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\App.js",["139"],"import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Switch, Route, useLocation } from 'react-router-dom';\r\nimport Login from './pages/Login';\r\nimport { auth } from './firebase/firebase';\r\nimport { signIn, signOut } from './features/userSlice';\r\nimport { useDispatch } from 'react-redux';\r\nimport Profile from './pages/Profile';\r\nimport Home from './pages/Home';\r\n\r\nexport const S = {\r\n  App: styled.div`\r\n    background-color: rgb(250, 250, 250);\r\n    min-height: 100vh;\r\n  `,\r\n\r\n  AppBody: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  `,\r\n};\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((currentUser) => {\r\n      if (currentUser) {\r\n        dispatch(\r\n          signIn({\r\n            displayName: currentUser.displayName,\r\n            email: currentUser.email,\r\n            userId: currentUser.uid,\r\n            userImageURL: currentUser.photoURL,\r\n          })\r\n        );\r\n      } else {\r\n        dispatch(signOut());\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <S.App>\r\n      <Switch>\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/p/:postId/\" component={location.state?.userName ? Profile : Home} />\r\n        <Route exact path=\"/:userName/\" component={Profile} />\r\n        <Route exact path=\"/:userName/:option/\" component={Profile} />\r\n        <Route exact path=\"/\" component={Home} />\r\n      </Switch>\r\n    </S.App>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\serviceWorker.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\app\\store.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Header.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Feed.js",["140"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport Post from './Post';\r\nimport db from '../firebase/firebase';\r\nimport RefreshLoader from './RefreshLoader';\r\nimport FeedRight from './FeedRight';\r\n\r\nconst S = {\r\n  Feed: styled.div`\r\n    max-width: 975px;\r\n    width: 100%;\r\n    padding: 0px 20px;\r\n    box-sizing: border-box;\r\n\r\n    display: flex;\r\n\r\n    @media (max-width: 1000px) {\r\n      justify-content: center;\r\n      padding: 0px;\r\n    }\r\n  `,\r\n\r\n  FeedLeft: styled.div`\r\n    max-width: 614px;\r\n    width: 100%;\r\n    margin-right: 28px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    @media (max-width: 1000px) {\r\n      width: 100%;\r\n      margin: 0px;\r\n      max-width: 602px;\r\n    }\r\n  `,\r\n\r\n  LoadingContainer: styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: white;\r\n\r\n    display: grid;\r\n    place-items: center;\r\n  `,\r\n};\r\n\r\nfunction Feed() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [numberOfPosts, setNumberOfPosts] = useState(() => {\r\n    db.collection('posts').onSnapshot((snapshot) => {\r\n      setNumberOfPosts(snapshot.docs.length);\r\n    });\r\n  });\r\n\r\n  const postsPerPage = 5;\r\n  const feedRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    db.collection('posts')\r\n      .orderBy('timestamp', 'desc')\r\n      .limit(postsPerPage * currentPage)\r\n      .onSnapshot((snapshot) => {\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({ postId: doc.id, ...doc.data() }))\r\n        );\r\n\r\n        setLoading(false);\r\n      });\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    function handleScroll() {\r\n      const lastPost = feedRef?.current?.lastElementChild;\r\n\r\n      if (\r\n        // 60 === margin bottom of lastPost\r\n        Math.round(lastPost?.getBoundingClientRect().bottom) + 60 ===\r\n          window.innerHeight &&\r\n        currentPage < Math.ceil(numberOfPosts / postsPerPage)\r\n      ) {\r\n        setCurrentPage((currentPage) => currentPage + 1);\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, [posts]);\r\n\r\n  return (\r\n    <>\r\n      {loading && <RefreshLoader />}\r\n      <S.Feed>\r\n        <S.FeedLeft ref={feedRef}>\r\n          {posts.map(\r\n            ({\r\n              caption,\r\n              displayName,\r\n              imageURL,\r\n              postId,\r\n              timestamp,\r\n              title,\r\n              userId,\r\n              userImageURL,\r\n            }) => (\r\n              <Post\r\n                key={postId}\r\n                caption={caption}\r\n                displayName={displayName}\r\n                imageURL={imageURL}\r\n                postId={postId}\r\n                title={title}\r\n                userId={userId}\r\n                userImageURL={userImageURL}\r\n                timestamp={new Date(timestamp?.toDate()).toUTCString()}\r\n              />\r\n            )\r\n          )}\r\n        </S.FeedLeft>\r\n\r\n        <FeedRight />\r\n      </S.Feed>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Feed;\r\n","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Post.js",["141"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport Comment from './Comment';\r\nimport moment from 'moment';\r\nimport db from '../firebase/firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CommentSender from './CommentSender';\r\nimport PostImageLoader from './PostImageLoader';\r\nimport PostIcons from './PostIcons';\r\n\r\nconst S = {\r\n  Post: styled.div`\r\n    width: 100%;\r\n    border: 1px solid lightgrey;\r\n    margin-bottom: 60px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-radius: 3px;\r\n    background-color: white;\r\n    @media (max-width: 600px) {\r\n      border: none;\r\n    }\r\n  `,\r\n\r\n  PostHeader: styled.div`\r\n    height: 60px;\r\n    padding: 16px;\r\n    box-sizing: border-box;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    > .MuiSvgIcon-root {\r\n      border: 1px solid red;\r\n      border-radius: 100%;\r\n      padding: 2px;\r\n      cursor: pointer;\r\n    }\r\n  `,\r\n\r\n  PostUserImage: styled.img`\r\n    width: 32px;\r\n    height: 32px;\r\n    box-sizing: border-box;\r\n    object-fit: contain;\r\n    border-radius: 100%;\r\n\r\n    cursor: pointer;\r\n  `,\r\n\r\n  PostHeaderInfo: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 10px;\r\n  `,\r\n\r\n  PostUserName: styled.span`\r\n    font-size: 14px;\r\n    color: #262626;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  `,\r\n\r\n  PostTitle: styled.span`\r\n    font-size: 12px;\r\n    color: #262626;\r\n  `,\r\n\r\n  PostImage: styled.img`\r\n    width: 614px;\r\n    object-fit: contain;\r\n    display: block;\r\n\r\n    @media (max-width: 1000px) {\r\n      width: 100%;\r\n    }\r\n  `,\r\n\r\n  PostBottom: styled.div`\r\n    flex: 1;\r\n  `,\r\n\r\n  PostTimestamp: styled.div`\r\n    padding: 0px 16px;\r\n    font-size: 10px;\r\n    color: #8e8e8e;\r\n    margin-bottom: 3px;\r\n  `,\r\n\r\n  CommentLength: styled.span`\r\n    padding: 3px 16px;\r\n    font-size: 14px;\r\n    color: #8e8e8e;\r\n    cursor: pointer;\r\n  `,\r\n};\r\n\r\nfunction Post({ caption, displayName, imageURL, postId, timestamp, title, userId, userImageURL }) {\r\n  const user = useSelector(selectUser);\r\n  const [comments, setComments] = useState([]);\r\n  const history = useHistory();\r\n  const imageRef = useRef(null);\r\n  const [postImageLoading, setPostImageLoading] = useState(true);\r\n  const [postUserInfo, setPostUserInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    db.collection('posts')\r\n      .doc(postId)\r\n      .collection('comments')\r\n      .orderBy('timestamp', 'asc')\r\n      .onSnapshot((snapshot) => {\r\n        setComments(\r\n          snapshot.docs.map((doc) => ({\r\n            commentId: doc.id,\r\n            ...doc.data(),\r\n          }))\r\n        );\r\n      });\r\n\r\n    db.collection('users')\r\n      .doc(displayName)\r\n      .get()\r\n      .then((res) => {\r\n        setPostUserInfo(res.data());\r\n      });\r\n\r\n    imageRef?.current?.addEventListener('load', handleLoad);\r\n    return () => imageRef?.current?.addEventListener('load', handleLoad);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  function handleLoad() {\r\n    setPostImageLoading(false);\r\n  }\r\n\r\n  function clickViewAll() {\r\n    if (!user) return history.push('/login');\r\n    history.push(`/p/${postId}/`, {\r\n      displayName,\r\n      photoURL: postUserInfo?.photoURL,\r\n    });\r\n  }\r\n\r\n  function viewProfile() {\r\n    if (!user) return history.push('/login');\r\n    history.push(`/${displayName}/`, {\r\n      userName: displayName,\r\n    });\r\n\r\n    document.querySelector('body').style.overflowY = 'scroll';\r\n  }\r\n\r\n  return (\r\n    <S.Post>\r\n      <S.PostHeader>\r\n        <S.PostUserImage\r\n          onClick={viewProfile}\r\n          src={\r\n            postUserInfo?.photoURL\r\n              ? postUserInfo?.photoURL\r\n              : 'https://www.voakorea.com/themes/custom/voa/images/Author__Placeholder.png'\r\n          }\r\n          alt=\"post-owner-profile-image\"\r\n        />\r\n\r\n        <S.PostHeaderInfo>\r\n          <S.PostUserName onClick={viewProfile}>{displayName}</S.PostUserName>\r\n          <S.PostTitle>{title}</S.PostTitle>\r\n        </S.PostHeaderInfo>\r\n      </S.PostHeader>\r\n\r\n      {postImageLoading && <PostImageLoader />}\r\n      <S.PostImage ref={imageRef} src={imageURL} alt={title} />\r\n\r\n      <S.PostBottom>\r\n        <PostIcons\r\n          postId={postId}\r\n          caption={caption}\r\n          displayName={displayName}\r\n          imageURL={imageURL}\r\n          timestamp={timestamp}\r\n          title={title}\r\n          userId={userId}\r\n          userImageURL={userImageURL}\r\n        />\r\n\r\n        <Comment name={displayName} content={caption} />\r\n        {comments.length >= 3 && (\r\n          <S.CommentLength onClick={clickViewAll}>View all {comments.length} comments</S.CommentLength>\r\n        )}\r\n        {comments?.slice(-2).map((comment) => (\r\n          <Comment key={comment.commentId} name={comment.displayName} content={comment.comment} />\r\n        ))}\r\n\r\n        <S.PostTimestamp>{moment(timestamp).fromNow().toUpperCase()}</S.PostTimestamp>\r\n      </S.PostBottom>\r\n      <CommentSender postId={postId} user={user} />\r\n    </S.Post>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Comment.js",["142"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport moment from 'moment';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport db from '../firebase/firebase';\r\n\r\nconst S = {\r\n  Comment: styled.div`\r\n    padding: 0px 16px;\r\n    font-size: 14px;\r\n    color: #262626;\r\n    display: flex;\r\n    margin-bottom: ${(props) => props.marginOption && 15}px;\r\n  `,\r\n\r\n  CommentLeft: styled.div`\r\n    width: 40px;\r\n    margin-right: 15px;\r\n    > .MuiSvgIcon-root {\r\n      width: 32px;\r\n      height: 32px;\r\n      padding: 2px;\r\n      border: 2px solid #d32c83;\r\n      border-radius: 100%;\r\n      cursor: pointer;\r\n    }\r\n  `,\r\n\r\n  UserImage: styled.img`\r\n    width: 32px;\r\n    height: 32px;\r\n    padding: 2px;\r\n    border: 2px solid #d32c83;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n  `,\r\n\r\n  CommentRight: styled.div`\r\n    flex: 1;\r\n  `,\r\n\r\n  Name: styled.span`\r\n    font-weight: 500;\r\n    color: #444444;\r\n\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  `,\r\n\r\n  Content: styled.span`\r\n    margin-left: 5px;\r\n  `,\r\n\r\n  Caption: styled.div`\r\n    margin-bottom: 30px;\r\n  `,\r\n\r\n  ViewAll: styled.button`\r\n    border: none;\r\n    background-color: transparent;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n    color: #8e8e8e;\r\n    :focus {\r\n      outline: none;\r\n    }\r\n  `,\r\n\r\n  Timestamp: styled.span`\r\n    font-size: 12px;\r\n    color: #8e8e8e;\r\n  `,\r\n};\r\n\r\nfunction Comment({\r\n  userImageOption,\r\n  caption,\r\n  name,\r\n  content,\r\n  timestamp,\r\n  timestampOption,\r\n}) {\r\n  const user = useSelector(selectUser);\r\n  const [viewAll, setViewAll] = useState(false);\r\n  const history = useHistory();\r\n  const [commentUserInfo, setCommentUserInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    db.collection('users')\r\n      .doc(name)\r\n      .get()\r\n      .then((res) => {\r\n        setCommentUserInfo(res.data());\r\n      });\r\n  }, []);\r\n\r\n  function viewProfile() {\r\n    if (!user) return history.push('/login');\r\n    history.push(`/${name}/`, {\r\n      userName: name,\r\n    });\r\n    document.querySelector('body').style.overflowY = 'scroll';\r\n  }\r\n\r\n  return (\r\n    <S.Comment marginOption={userImageOption}>\r\n      {userImageOption && (\r\n        <S.CommentLeft>\r\n          <S.UserImage\r\n            onClick={viewProfile}\r\n            src={\r\n              commentUserInfo?.photoURL\r\n                ? commentUserInfo.photoURL\r\n                : 'https://www.voakorea.com/themes/custom/voa/images/Author__Placeholder.png'\r\n            }\r\n            alt=\"profile-image\"\r\n          />\r\n        </S.CommentLeft>\r\n      )}\r\n\r\n      <S.CommentRight>\r\n        <S.Name onClick={viewProfile}>{name}</S.Name>\r\n        <S.Content>\r\n          {content?.length > 100 && !viewAll ? (\r\n            <>\r\n              {content.slice(0, 100).trim() + '...'}\r\n              <S.ViewAll onClick={() => setViewAll(true)}>more</S.ViewAll>\r\n            </>\r\n          ) : (\r\n            content\r\n          )}\r\n        </S.Content>\r\n\r\n        {caption && <S.Caption></S.Caption>}\r\n        <br />\r\n        {timestampOption && (\r\n          <S.Timestamp>\r\n            {timestamp\r\n              ? moment(new Date(timestamp?.toDate()).toUTCString())\r\n                  .fromNow()\r\n                  .replace(' ago', '')\r\n              : 'a few seconds'}\r\n          </S.Timestamp>\r\n        )}\r\n      </S.CommentRight>\r\n    </S.Comment>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\firebase\\firebase.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\features\\userSlice.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\DropdownMenu.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\Overlay.js",["143","144"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\nimport db from '../firebase/firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../features/userSlice';\r\nimport moment from 'moment';\r\nimport CommentSender from './CommentSender';\r\nimport Comment from './Comment';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PostImageLoader from './PostImageLoader';\r\nimport PostIcons from './PostIcons';\r\nimport PostRightLoader from './PostRightLoader';\r\n\r\nconst S = {\r\n  Overlay: styled.div`\r\n    position: absolute;\r\n    top: ${(props) => props.height}px;\r\n    overflow-y: hidden;\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    display: grid;\r\n    place-items: center;\r\n    z-index: 2;\r\n\r\n    @media (max-width: 500px) {\r\n      place-items: end stretch;\r\n    }\r\n  `,\r\n\r\n  ClostButton: styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0px;\r\n    padding: 16px;\r\n    z-index: 1;\r\n\r\n    > .MuiSvgIcon-root {\r\n      cursor: pointer;\r\n      color: white;\r\n    }\r\n  `,\r\n\r\n  PostBox: styled.div`\r\n    max-width: 935px;\r\n    height: 600px;\r\n    display: flex;\r\n  `,\r\n\r\n  PostLeft: styled.div`\r\n    width: 600px;\r\n\r\n    background-color: black;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    @media (max-width: 1000px) {\r\n      display: none;\r\n    }\r\n  `,\r\n\r\n  PostRight: styled.div`\r\n    width: 335px;\r\n    background-color: white;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    @media (max-width: 500px) {\r\n      width: 100%;\r\n    }\r\n  `,\r\n\r\n  PostImage: styled.img`\r\n    height: 100%;\r\n    max-width: 100%;\r\n    object-fit: contain;\r\n    display: block;\r\n  `,\r\n\r\n  PostTop: styled.div`\r\n    height: 72px;\r\n    padding: 16px;\r\n    box-sizing: border-box;\r\n    border-bottom: 1px solid #efefef;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    > .MuiSvgIcon-root {\r\n      width: 32px;\r\n      height: 32px;\r\n      padding: 2px;\r\n      border: 2px solid #d32c83;\r\n      border-radius: 100%;\r\n      cursor: pointer;\r\n    }\r\n  `,\r\n\r\n  UserImage: styled.img`\r\n    width: 32px;\r\n    height: 32px;\r\n    padding: 2px;\r\n    border: 2px solid #d32c83;\r\n    border-radius: 100%;\r\n    cursor: pointer;\r\n  `,\r\n\r\n  PostInfo: styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-left: 15px;\r\n  `,\r\n\r\n  PostDisplayName: styled.span`\r\n    font-size: 14px;\r\n    color: #262626;\r\n    font-weight: 500;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      text-decoration: underline;\r\n    }\r\n  `,\r\n\r\n  PostTitle: styled.span`\r\n    font-size: 12px;\r\n    color: #262626;\r\n  `,\r\n\r\n  PostMiddle: styled.div`\r\n    padding-top: 20px;\r\n    overflow-y: scroll;\r\n    flex: 1;\r\n    ::-webkit-scrollbar {\r\n      display: none;\r\n    }\r\n  `,\r\n\r\n  Timestamp: styled.div`\r\n    height: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 12px;\r\n    color: #8e8e8e;\r\n    padding: 16px;\r\n    box-sizing: border-box;\r\n  `,\r\n\r\n  CommentLoadMoreContainer: styled.div`\r\n    text-align: center;\r\n    padding: 20px 0px;\r\n    display: ${(props) => props.hide && 'none'};\r\n    > .MuiSvgIcon-root {\r\n      border: 1px solid black;\r\n      border-radius: 100%;\r\n      cursor: pointer;\r\n    }\r\n  `,\r\n};\r\n\r\nfunction Overlay() {\r\n  const user = useSelector(selectUser);\r\n  const { postId } = useParams();\r\n  const [postInfo, setPostInfo] = useState({});\r\n  const [comments, setComments] = useState([]);\r\n  const overlayRef = useRef(null);\r\n  const buttonRef = useRef(null);\r\n  const imageRef = useRef(null);\r\n  const history = useHistory();\r\n  const [imageLoading, setImageLoading] = useState(true);\r\n  const [commentsPerPage] = useState(4);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [scrollY, setScrollY] = useState(window.scrollY);\r\n  const location = useLocation();\r\n\r\n  function loadMoreComments() {\r\n    setCurrentPage((crr) => crr + 1);\r\n  }\r\n\r\n  function goBackToFormerLocation() {\r\n    document.querySelector('body').style.overflowY = 'scroll';\r\n    history.goBack();\r\n  }\r\n\r\n  function pressESC(e) {\r\n    if (e.keyCode !== 27) return;\r\n    goBackToFormerLocation();\r\n  }\r\n\r\n  function clickOverlay(e) {\r\n    if (e.target !== overlayRef.current) return;\r\n    goBackToFormerLocation();\r\n  }\r\n\r\n  function clickCloseButton(e) {\r\n    goBackToFormerLocation();\r\n  }\r\n\r\n  function handleResize() {\r\n    setScrollY(window.scrollY);\r\n  }\r\n\r\n  function handlePopState() {\r\n    document.querySelector('body').style.overflowY = 'scroll';\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.querySelector('body').style.overflowY = 'hidden';\r\n\r\n    async function fetchData() {\r\n      const res = await db.collection('posts').doc(postId).get();\r\n      setPostInfo(res.data());\r\n    }\r\n    fetchData();\r\n\r\n    db.collection('posts')\r\n      .doc(postId)\r\n      .collection('comments')\r\n      .orderBy('timestamp', 'desc')\r\n      .onSnapshot((snapshot) => {\r\n        setComments(\r\n          snapshot?.docs.map((doc) => ({\r\n            commentId: doc.id,\r\n            ...doc.data(),\r\n          }))\r\n        );\r\n      });\r\n\r\n    imageRef.current.addEventListener('load', () => {\r\n      setImageLoading(false);\r\n    });\r\n\r\n    window.addEventListener('popstate', handlePopState);\r\n    window.addEventListener('click', clickOverlay);\r\n    window.addEventListener('keydown', pressESC);\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('popstate', handlePopState);\r\n      window.removeEventListener('click', clickOverlay);\r\n      window.removeEventListener('keydown', pressESC);\r\n      window.removeEventListener('resize', handleResize);\r\n    };\r\n  }, []);\r\n\r\n  function viewProfile() {\r\n    history.push(`/${postInfo.displayName}/`, {\r\n      userName: postInfo.displayName,\r\n    });\r\n\r\n    document.querySelector('body').style.overflowY = 'scroll';\r\n  }\r\n\r\n  return (\r\n    <S.Overlay ref={overlayRef} height={window.scrollY}>\r\n      <S.ClostButton>\r\n        <CloseIcon\r\n          ref={buttonRef}\r\n          height={window.scrollY}\r\n          onClick={clickCloseButton}\r\n          fontSize=\"large\"\r\n        />\r\n      </S.ClostButton>\r\n      <S.PostBox>\r\n        <S.PostLeft>\r\n          {imageLoading && <PostImageLoader />}\r\n          <S.PostImage\r\n            ref={imageRef}\r\n            src={postInfo.imageURL}\r\n            alt={postInfo.title}\r\n          />\r\n        </S.PostLeft>\r\n\r\n        <S.PostRight>\r\n          {imageLoading && <PostRightLoader />}\r\n          <S.PostTop>\r\n            <S.UserImage\r\n              onClick={viewProfile}\r\n              src={\r\n                location.state?.photoURL\r\n                  ? location.state.photoURL\r\n                  : 'https://www.voakorea.com/themes/custom/voa/images/Author__Placeholder.png'\r\n              }\r\n            />\r\n\r\n            <S.PostInfo>\r\n              <S.PostDisplayName onClick={viewProfile}>\r\n                {postInfo.displayName}\r\n              </S.PostDisplayName>\r\n              <S.PostTitle>{postInfo.title}</S.PostTitle>\r\n            </S.PostInfo>\r\n          </S.PostTop>\r\n          <S.PostMiddle>\r\n            <Comment\r\n              name={location.state.displayName}\r\n              content={postInfo.caption}\r\n              userImageOption\r\n              timestamp={postInfo.timestamp}\r\n              timestampOption\r\n            />\r\n\r\n            {comments\r\n              .slice(0, commentsPerPage * currentPage)\r\n              .map(({ // prettier ignore\r\n                commentId, userImageURL, displayName, comment, timestamp }) => (\r\n                <Comment\r\n                  key={commentId}\r\n                  name={displayName}\r\n                  content={comment}\r\n                  userImageOption\r\n                  timestamp={timestamp}\r\n                  timestampOption\r\n                />\r\n              ))}\r\n            {}\r\n            <S.CommentLoadMoreContainer\r\n              hide={\r\n                currentPage === Math.ceil(comments.length / commentsPerPage) ||\r\n                Math.ceil(comments.length / commentsPerPage) === 0\r\n              }\r\n            >\r\n              <AddIcon onClick={loadMoreComments} fontSize=\"middle\" />\r\n            </S.CommentLoadMoreContainer>\r\n          </S.PostMiddle>\r\n          <PostIcons\r\n            postId={postId}\r\n            caption={postInfo.caption}\r\n            displayName={postInfo.displayName}\r\n            imageURL={postInfo.imageURL}\r\n            timestamp={postInfo.timestamp}\r\n            title={postInfo.title}\r\n            userId={postInfo.userId}\r\n            userImageURL={postInfo.userImageURL}\r\n            commentIconDisableOption\r\n            borderTopOption\r\n          />\r\n          <S.Timestamp>\r\n            {moment(\r\n              new Date(postInfo?.timestamp?.toDate()).toUTCString()\r\n            ).fromNow()}\r\n          </S.Timestamp>\r\n          <CommentSender postId={postId} user={user} />\r\n        </S.PostRight>\r\n      </S.PostBox>\r\n    </S.Overlay>\r\n  );\r\n}\r\n\r\nexport default Overlay;\r\n","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\CommentSender.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\PostImageLoader.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\SquarePost.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\RefreshLoader.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\ProfilePosts.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\utils\\util.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\PostIcons.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\PostRightLoader.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\ProfileHeader.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\SmallProfileInfoContainer.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\ProfileMiddle.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\FeedRight.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\FeedRightRow.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\GlobalStyle.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\pages\\Home.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\pages\\Login.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\LoginForm.js",["145"],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport db, { auth } from '../firebase/firebase';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Spin } from '../utils/util';\r\n\r\nconst S = {\r\n  LoginForm: styled.div`\r\n    display: grid;\r\n    place-items: center;\r\n    width: 100%;\r\n    flex: 1;\r\n    height: 100vh;\r\n  `,\r\n\r\n  LoginBox: styled.div`\r\n    width: 350px;\r\n    height: 380px;\r\n    border: 1px solid lightgrey;\r\n    background: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  `,\r\n\r\n  Form: styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 20px;\r\n  `,\r\n\r\n  Logo: styled.img`\r\n    margin-top: 30px;\r\n  `,\r\n\r\n  LoginInput: styled.input`\r\n    margin-top: 15px;\r\n    width: 250px;\r\n    height: 36px;\r\n    padding: 8px;\r\n    box-sizing: border-box;\r\n    border: 1px solid lightgrey;\r\n    background-color: #fafafa;\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n  `,\r\n\r\n  LoginButton: styled.button`\r\n    background-color: ${(props) => (props.disabled ? '#b2dffc' : '#0095f6')};\r\n    cursor: ${(props) => (props.disabled ? '' : 'pointer')};\r\n    border: none;\r\n    border-radius: 3px;\r\n    margin-top: 10px;\r\n    padding: 5px;\r\n    color: #ffffff;\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n  `,\r\n\r\n  Loader: styled.img`\r\n    width: 12px;\r\n    height: 12px;\r\n    animation: ${Spin} 3s infinite linear;\r\n  `,\r\n\r\n  ErrorMessage: styled.strong`\r\n    width: 80%;\r\n    text-align: center;\r\n  `,\r\n};\r\n\r\nfunction LoginForm() {\r\n  const [users, setUsers] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [clicked, setClicked] = useState('');\r\n  const history = useHistory();\r\n  const usersCollection = db.collection('users');\r\n\r\n  useEffect(() => {\r\n    usersCollection.onSnapshot((snapshot) => {\r\n      setUsers(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }))\r\n      );\r\n    });\r\n  }, []);\r\n\r\n  function startProcess(processName) {\r\n    setClicked(`${processName}`);\r\n    setLoading(true);\r\n  }\r\n\r\n  function handleError(error) {\r\n    setError(error.message);\r\n    setLoading(false);\r\n  }\r\n\r\n  async function signUp(e) {\r\n    e.preventDefault();\r\n    startProcess('signUp');\r\n\r\n    try {\r\n      if (users?.some((user) => user.displayName === name)) {\r\n        setName('');\r\n        setLoading(false);\r\n        setClicked('');\r\n        throw new Error('name already exist');\r\n      }\r\n\r\n      const {\r\n        user: { displayName, email: userEmail, uid, photoURL },\r\n      } = await auth.createUserWithEmailAndPassword(email, password);\r\n\r\n      await auth.currentUser.updateProfile({\r\n        displayName: name,\r\n        photoURL: '',\r\n      });\r\n\r\n      await usersCollection.doc(displayName).set({\r\n        displayName,\r\n        email: userEmail,\r\n        uid,\r\n        photoURL,\r\n      });\r\n\r\n      history.replace('/');\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  }\r\n\r\n  async function login(e) {\r\n    e.preventDefault();\r\n    startProcess('login');\r\n\r\n    try {\r\n      await auth.signInWithEmailAndPassword(email, password);\r\n      history.replace('/');\r\n    } catch (error) {\r\n      handleError(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <S.LoginForm>\r\n      <S.LoginBox>\r\n        <S.Logo\r\n          src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.pngs\"\r\n          alt=\"instagram\"\r\n        />\r\n\r\n        <S.Form>\r\n          <S.LoginInput\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n              if (name.includes(' ')) {\r\n                setError('name can not include space');\r\n              } else {\r\n                setError('');\r\n              }\r\n            }}\r\n            maxLength={12}\r\n            value={name}\r\n            type=\"text\"\r\n            placeholder=\"name\"\r\n          />\r\n          <S.LoginInput\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            maxLength={25}\r\n            value={email}\r\n            type=\"email\"\r\n            placeholder=\"email\"\r\n          />\r\n          <S.LoginInput\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n            minLength={6}\r\n            maxLength={15}\r\n            type=\"password\"\r\n            placeholder=\"password\"\r\n          />\r\n          <S.LoginButton disabled={password.length < 6 || !email || name.length !== 0} onClick={login}>\r\n            {loading && clicked === 'login' ? (\r\n              <S.Loader\r\n                src=\"https://img2.pngio.com/loader-png-transparent-loaderpng-images-pluspng-loader-png-504_504.png\"\r\n                alt=\"\"\r\n              />\r\n            ) : (\r\n              <>Login</>\r\n            )}\r\n          </S.LoginButton>\r\n          <S.LoginButton\r\n            disabled={password.length < 6 || name.length < 5 || !email || name.includes(' ')}\r\n            onClick={signUp}\r\n          >\r\n            {loading && clicked === 'signUp' ? (\r\n              <S.Loader\r\n                src=\"https://img2.pngio.com/loader-png-transparent-loaderpng-images-pluspng-loader-png-504_504.png\"\r\n                alt=\"\"\r\n              />\r\n            ) : (\r\n              <>Sign Up</>\r\n            )}\r\n          </S.LoginButton>\r\n        </S.Form>\r\n        {error && <S.ErrorMessage>{error}</S.ErrorMessage>}\r\n      </S.LoginBox>\r\n    </S.LoginForm>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\ProfileContainer.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\pages\\Profile.js",[],"C:\\Users\\mass2\\Desktop\\react\\react-redux\\app\\src\\components\\SearchResult.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":43,"column":6,"nodeType":"152","endLine":43,"endColumn":8,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"154","line":91,"column":6,"nodeType":"152","endLine":91,"endColumn":13,"suggestions":"155"},{"ruleId":"150","severity":1,"message":"156","line":133,"column":28,"nodeType":"157","endLine":133,"endColumn":35},{"ruleId":"150","severity":1,"message":"158","line":100,"column":6,"nodeType":"152","endLine":100,"endColumn":8,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":176,"column":10,"nodeType":"157","messageId":"162","endLine":176,"endColumn":17},{"ruleId":"150","severity":1,"message":"163","line":247,"column":6,"nodeType":"152","endLine":247,"endColumn":8,"suggestions":"164"},{"ruleId":"150","severity":1,"message":"165","line":96,"column":6,"nodeType":"152","endLine":96,"endColumn":8,"suggestions":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["169"],"React Hook useEffect has missing dependencies: 'currentPage' and 'numberOfPosts'. Either include them or remove the dependency array.",["170"],"The ref value 'imageRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'imageRef.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["171"],"no-unused-vars","'scrollY' is assigned a value but never used.","unusedVar","React Hook useEffect has missing dependencies: 'clickOverlay', 'postId', and 'pressESC'. Either include them or remove the dependency array.",["172"],"React Hook useEffect has a missing dependency: 'usersCollection'. Either include it or remove the dependency array.",["173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [dispatch]",{"range":"184","text":"185"},"Update the dependencies array to be: [currentPage, numberOfPosts, posts]",{"range":"186","text":"187"},"Update the dependencies array to be: [name]",{"range":"188","text":"189"},"Update the dependencies array to be: [clickOverlay, postId, pressESC]",{"range":"190","text":"191"},"Update the dependencies array to be: [usersCollection]",{"range":"192","text":"193"},[1128,1130],"[dispatch]",[2275,2282],"[currentPage, numberOfPosts, posts]",[2001,2003],"[name]",[5782,5784],"[clickOverlay, postId, pressESC]",[2164,2166],"[usersCollection]"]